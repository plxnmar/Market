@model IEnumerable<Market.Domain.Entity.Product>

@{
	ViewBag.Title = "title";
	Layout = "_Layout";
}

<div class="row">

	<div class="col-2">
		@await Component.InvokeAsync("CategoryList")
	</div>

	<div class="col-10">

		@if (User.IsInRole("admin"))
		{
			<div class="col-12 my-3">
				<a asp-action="SaveProduct" asp-route-id="0" class="btn btn-success">Добавить продукт</a>
			</div>
		}

		<div class="row">
			@{

				foreach (var product in Model)
				{
					<div class="col-3">
						<div class="card mb-3" style="border: 0px">
							<a href="" class="ProductImg" data-id="@product.Id">
								<img src=@product.ImgPath class="card-img-top embed-responsive-item" alt="..."
							 	style="height:17rem; width:100%; object-fit: cover;">
							</a>
							<div class="my-2">

								<div class="mb-1">
									<span class="badge bg-light text-dark fs-6">
										@product.Price.ToString("0.#####") ₽
									</span>
								</div>
								@*<p class="card-text">@product.Category.Name</p>*@
								<p class="fs-6 mb-4">@product.Name</p>
								<div>
									@if (User.Identity.IsAuthenticated)
									{
										<div class="countItems countItems-@product.Id" data-id="@product.Id"></div>
									}
									else
									{
										<input type="submit" class="btn btn-primary" value="В корзину" onclick="AddCartItem(this)">
									}

								</div>

								@if (User.IsInRole("admin"))
								{
									<div class="mt-3">
										<div class="d-inline-block">
											<a asp-action="SaveProduct" asp-route-id="@product.Id" class="btn btn-outline-primary">Изменить</a>
										</div>
										<div class="d-inline-block">
											<a asp-action="DeleteProduct" asp-route-id="@product.Id" class="btn btn-outline-danger">Удалить</a>
										</div>
									</div>
								}
							</div>
						</div>
					</div>
				}
			}
		</div>
	</div>
</div>



<!-- Модальное окно -->
<div class="modal fade" id="ProductModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog" id="DataModal">
	</div>
</div>

@section Scripts {


	<script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/jquery-ajax-unobtrusive@3.2.6/dist/jquery.unobtrusive-ajax.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

	<script>

		$(function () {
			$('.countItems').each(function () {
				var id = $(this).attr('data-id');
				GetCount(id);

			});
		});


		function GetCount(productId) {
			var id = productId;
			var name = '.countItems-' + String(id);

			$.ajax({
				url: '/Cart/GetCartItemQuantityPartial',
				type: 'GET',
				data: {
					'id': id
				},
				success: function (partialView) {
					var count = name;
					$(count).each(function () {
						$(this).html(partialView);
					});
				}
			});
		}


		function AddCartItem(form) {
			$.ajax({
				url: '/Account/Login',
				type: 'GET',
				success: function (result) {
					window.location.href = '/Account/Login';
				}
			});
		}


		jQuery.noConflict();
		(function ($) {
			$.ajaxSetup({ cache: false });
			$(".ProductImg").on('click', function (e) {
				e.preventDefault();
				var id = $(this).attr("data-id");
				$.ajax({
					url: '/Product/GetProduct',
					type: 'GET',
					data: {
						'id': id
					},
					success: function (data) {
						$('#DataModal').html(data);
						$('#ProductModal').modal('toggle');

					}
				});
			});
		})(jQuery);

	</script>
}

